<section id="skills" class="min-h-full container mx-auto pb-8">
    <h2 class="text-2xl mb-8">02. Skills</h2>

    <h3>Programming languages</h3>
    <p>
        <img src="img/technologies/csharp.svg" class="float-left" style="width: 48px" alt="C# Logo" />
        .NET / C# has been a cornerstone of my career and I have been using and following it's development
        since back before C# had Generics. While there have been other many languages I've used
        over my career, it's safe to say I'm still a big fan of .NET. Microsoft's recent effort in making
        it cross-platform and open-source has been an exciting development in it's history, and one which
        gives me confidence in continuing to invest in the ecosystem.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>OpenSimple, 2021 - <a href="#project-nyggle">Nyggle</a></li>
            <li>Personal project, 2020 - <a href="#project-keebit">Keebit</a></li>
            <li>Australian Building Codes Board, 2012 - <a href="#project-abcb-drm">eCommerce/DRM
                    application</a></li>
            <li>Australian Building Codes Board, 2012 - <a href="#project-abcb-crm">In-house CRM</a></li>
            <li>VSoft Technologies, 2006-2012 - <a href="#project-finalbuilder-server">FinalBuilder
                    Server</a>
            </li>
            <li>VSoft Technologies, 2006-2012 - <a href="#project-continuaci">ContinuaCI</a></li>
        </ul>
    </details>
    <p class="mt-2">
        <img src="img/technologies/typescript.svg" class="float-left" style="width: 48px" alt="TypeScript Logo" />
        TypeScript, at least to me, has been a wonderful and pragmatic way to improve the situation
        surrounding client-side web development. I'm a big fan of strongly and statically typed langauges,
        and TypeScript continues to impress with how expressive the type system is and how successfully
        types have been retrofitted to a language like JavaScript.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>OpenSimple, 2021-Present - <a href="#project-nyggle">Nyggle</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-raap">Regulation as a Platform (RaaP)</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-active-community">ACTive Community</a></li>
        </ul>
    </details>
    <p class="mt-2">
        <img src="img/technologies/go.svg" class="float-left" style="width: 48px" alt="Go(lang) Logo" />
        While I have only had to the opportunity to use Go professionally for one project, it is a
        language I would comfortably say I am proficient in. Its simplicity and tooling make it quick to
        learn, and I have witnessed this as new developers have joined the team and been able to
        hit the ground running.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>AUSTRAC 2019-Present - <a href="#project-alerting">Alerting project</a></li>
        </ul>
    </details>
    <p class="mt-2">
        <img src="img/technologies/haskell.png" class="float-left" style="width: 48px" alt="Haskell Logo" />
        Haskell was a spike in my professional career to learn functional programming. Having the
        opportunity
        to work with some of the top functional programmers while at CSIRO Data61, and seeing just how far
        down
        the rabbit hole you can go with types was certainly an experience that challenged me in many ways.
        Functors, applicative functors, monads, monad transformers and the rest all became part of my
        thinking how to compose software, and it really did open my eyes to a whole other world.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-raap">Regulation as a Platform (RaaP)</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-active-community">ACTive Community</a></li>
        </ul>
    </details>
    <p class="mt-2">
        <i>Note there are other languages which I have experience in using, e.g., Java, Scala, Python,
            Pascal, Bash
            and Powershell.</i>
    </p>

    <h3 class="mt-4">Web</h3>

    <p>
        Having started my career in the mid-2000s, the web has almost always played a role in the projects
        I've been
        involved with. I have a good understanding of the underlying standards, practices and technologies,
        i.e., HTML, CSS,
        Browser Web APIs, API design standards and the HTTP protocol, and are able to apply them when using
        new libraries or frameworks.
    </p>

    <p class="mt-2">
        <img src="img/technologies/dotnetcore.svg" class="float-left" style="width: 48px" alt="Blazor Logo" />

        ASP.NET (Web Forms, MVC, Pages, Web APIs) has been the predominant back-end framework which I've
        used to build web-based applications and services. The majority of my experience has been with
        ASP.NET MVC, which was a favourable switch from Web Forms when it was first released.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>OpenSimple, 2021 - <a href="#project-nyggle">Nyggle</a></li>
            <li>Personal project, 2020 - <a href="#project-keebit">Keebit</a></li>
            <li>Australian Building Codes Board, 2012 - <a href="#project-abcb-drm">eCommerce/DRM
                    application</a></li>
            <li>Australian Building Codes Board, 2012 - <a href="#project-abcb-crm">In-house CRM</a></li>
            <li>VSoft Technologies, 2006-2012 - <a href="#project-finalbuilder-server">FinalBuilder
                    Server</a>
            </li>
            <li>VSoft Technologies, 2006-2012 - <a href="#project-continuaci">ContinuaCI</a></li>
        </ul>
    </details>

    <p>
        <img src="img/technologies/react.svg" class="float-left" style="width: 48px" alt="React Logo" />

        React (and similarily, Mithril.js) have been my go-to libraries for writing rich client-side
        web applications. I've used these libraries to write both single-page applications, and to
        write client-side components for server-rendered pages.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>Personal project - <a href="#project-nyggle">Nyggle</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-raap">Regulation as a Platform (RaaP)</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-active-community">ACTive Community</a></li>
        </ul>
    </details>

    <p class="mt-2">
        <img src="img/technologies/blazor.svg" class="float-left" style="width: 48px" alt="Blazor Logo" />

        Using ASP.NET's Blazor in a personal project has allowed me to evaluate how well the new framework
        works for non-trivial applications. I have been pleasantly suprised with how well it works,
        how far you can get without falling back to JavaScript, and how well it performs overall. I'm eager
        to see whether it will continue to improve, and lead the way for WASM based client-side web
        development.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>Personal project - <a href="#project-keebit">Keebit</a></li>
        </ul>
    </details>

    <h3>Databases, and data processing</h3>

    <p>
        <img src="img/technologies/postgresql.png" class="float-left" style="width: 48px" alt="PostgreSQL Logo" />

        PostgreSQL has been utilized in a wide range of projects throughout my career, and I'm comfortable
        designing new database schemas/models, writing complex SQL queries, analysing query execution plans
        to
        work out performance issues, and generally any database related task.
    </p>
    <details class="ml-1">
        <summary>Projects</summary>
        <ul>
            <li>AUSTRAC 2019-Present - <a href="#project-alerting">Alerting</a></li>
            <li>AUSTRAC 2019-Present - <a href="#company-austrac">Analytics engineer role</a></li>
            <li>OpenSimple 2021-Present - <a href="#projects-nyggle">Nyggle</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-raap">Regulation as a Platform (RaaP)</a></li>
            <li>CSIRO Data61, 2016-2018 - <a href="#project-active-community">ACTive Community</a></li>
            <li>VSoft Technologies, 2006-2012 - <a href="#project-continuaci">ContinuaCI</a></li>
        </ul>
    </details>

    <p>
        <img src="img/technologies/spark.svg" class="float-left" style="width: 48px" alt="Apache Spark Logo" />
        Apache Spark (and Apache Hadoop) was the distributed processing framework used to process
        billions of transaction reports at AUSTRAC. My role as an analytics engineer involved maintaining
        complex data processing pipelines and algorithms, and provided with experience on how to do this
        on truly big data.
    </p>
    <details class="ml-1">
        <summary>Roles</summary>
        <ul>
            <li>AUSTRAC 2019-Present - <a href="#company-austrac">Analytics engineer role</a></li>
        </ul>
    </details>

    <h3>DevOps</h3>

    <p>
        <img src="img/technologies/linux.svg" class="float-left"
            style="width: 48px; filter: drop-shadow( 0px 0px 1px #FFF);" alt="Tux" />
        Linux has always been my preferred operating system, despite being a Windows developer for quite
        a good portion of my career. My interest goes all the way back to high school, where I'd
        spend (seriously) countless hours tinkering and trying out different distributions. Peak
        nerd was persisting with (<a href="https://www.linuxfromscratch.org/" target="_blank">Linux From
            Scratch</a>)
        on my old Pentium 133Mhz which would take about a week to compile the entire system. 🤓
    </p>
    <p>
        This passion has become a great benefit with Linux becoming the defacto operating system used in
        the cloud. It's given me the foundamental knowledge to understand how modern deploymnent tools like
        containerisation work, and allows me to quickly get up to speed with new tools and techniques.
    </p>
    <p>
        I frequently utilise automation tools, such as Terraform and Ansible, along with simple bash
        scripts,
        to make processes repeatable and dependable.
    </p>

    <p class="mt-2">
        <img src="img/technologies/aws.svg" class="float-left" style="width: 64px;" alt="Amazon Web Services Logo" />
        I have experience with the various with cloud providers, such as AWS, GCloud, Vultr, etc, and
        have used a variety of their hosted services. I've deploy and managed applications deployed to
        orchestration platforms such as Kubernetes, and AWS Fargate, and would be interested
        in gaining more experience in this area.
    </p>

    <h3>Development tools and practices</h3>
    <p>
        <img src="img/technologies/git.svg" class="float-left" style="width: 64px;" alt="Git Logo" />
        Git is an indispensible tool in my toolbox, and one which I'm constantly learning to use more
        effectively. I've worked in teams which take great pride in having clean Git history and have
        learnt many of the more 'advanced' Git features.
    </p>
    <p class="mt-2">
        Agile software development. My experience has mostly been in teams which have practised some form
        of Scrum, though usually tailored to work for the team and situation. This, in my opinion,
        is the preferrable approach over any one-size-fits-all, and is much better aligned with the original
        <a href="https://agilemanifesto.org/">agile manifesto</a>.
    </p>
</section>